//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CashFlowClient.CashRecordServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CashRecordServiceReference.ICashRecordService")]
    public interface ICashRecordService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Register", ReplyAction="http://tempuri.org/ICashRecordService/RegisterResponse")]
        string Register(string fullName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Register", ReplyAction="http://tempuri.org/ICashRecordService/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string fullName, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Login", ReplyAction="http://tempuri.org/ICashRecordService/LoginResponse")]
        string Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/Login", ReplyAction="http://tempuri.org/ICashRecordService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/AddRecord", ReplyAction="http://tempuri.org/ICashRecordService/AddRecordResponse")]
        string AddRecord(string description, int amount, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/AddRecord", ReplyAction="http://tempuri.org/ICashRecordService/AddRecordResponse")]
        System.Threading.Tasks.Task<string> AddRecordAsync(string description, int amount, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/DeleteRecord", ReplyAction="http://tempuri.org/ICashRecordService/DeleteRecordResponse")]
        string DeleteRecord(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/DeleteRecord", ReplyAction="http://tempuri.org/ICashRecordService/DeleteRecordResponse")]
        System.Threading.Tasks.Task<string> DeleteRecordAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/UpdateRecord", ReplyAction="http://tempuri.org/ICashRecordService/UpdateRecordResponse")]
        string UpdateRecord(int id, string desc, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/UpdateRecord", ReplyAction="http://tempuri.org/ICashRecordService/UpdateRecordResponse")]
        System.Threading.Tasks.Task<string> UpdateRecordAsync(int id, string desc, int amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/GetAllRecords", ReplyAction="http://tempuri.org/ICashRecordService/GetAllRecordsResponse")]
        System.Data.DataTable GetAllRecords(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICashRecordService/GetAllRecords", ReplyAction="http://tempuri.org/ICashRecordService/GetAllRecordsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllRecordsAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICashRecordServiceChannel : CashFlowClient.CashRecordServiceReference.ICashRecordService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CashRecordServiceClient : System.ServiceModel.ClientBase<CashFlowClient.CashRecordServiceReference.ICashRecordService>, CashFlowClient.CashRecordServiceReference.ICashRecordService {
        
        public CashRecordServiceClient() {
        }
        
        public CashRecordServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CashRecordServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashRecordServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CashRecordServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Register(string fullName, string email, string password) {
            return base.Channel.Register(fullName, email, password);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string fullName, string email, string password) {
            return base.Channel.RegisterAsync(fullName, email, password);
        }
        
        public string Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public string AddRecord(string description, int amount, string email) {
            return base.Channel.AddRecord(description, amount, email);
        }
        
        public System.Threading.Tasks.Task<string> AddRecordAsync(string description, int amount, string email) {
            return base.Channel.AddRecordAsync(description, amount, email);
        }
        
        public string DeleteRecord(int id) {
            return base.Channel.DeleteRecord(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRecordAsync(int id) {
            return base.Channel.DeleteRecordAsync(id);
        }
        
        public string UpdateRecord(int id, string desc, int amount) {
            return base.Channel.UpdateRecord(id, desc, amount);
        }
        
        public System.Threading.Tasks.Task<string> UpdateRecordAsync(int id, string desc, int amount) {
            return base.Channel.UpdateRecordAsync(id, desc, amount);
        }
        
        public System.Data.DataTable GetAllRecords(string email) {
            return base.Channel.GetAllRecords(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllRecordsAsync(string email) {
            return base.Channel.GetAllRecordsAsync(email);
        }
    }
}
